[{"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\index.js":"1","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\App.js":"2","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\Registration.js":"3","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\SignIn.js":"4","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\config.js":"5","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\ValidationError.js":"6","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\services\\TokenServices.js":"7","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\services\\AuthApiService.js":"8","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\Nav.js":"9","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\Error.js":"10","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\LandingPage.js":"11","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\HomePage.js":"12","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\CreateConvo.js":"13","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\ConvoEventList.js":"14"},{"size":300,"mtime":1607996318776,"results":"15","hashOfConfig":"16"},{"size":1294,"mtime":1608678517923,"results":"17","hashOfConfig":"16"},{"size":6360,"mtime":1609810412980,"results":"18","hashOfConfig":"16"},{"size":3233,"mtime":1609810696355,"results":"19","hashOfConfig":"16"},{"size":161,"mtime":1609791457036,"results":"20","hashOfConfig":"16"},{"size":352,"mtime":1607995524868,"results":"21","hashOfConfig":"16"},{"size":795,"mtime":1607995636795,"results":"22","hashOfConfig":"16"},{"size":948,"mtime":1607995653709,"results":"23","hashOfConfig":"16"},{"size":2212,"mtime":1609875888356,"results":"24","hashOfConfig":"16"},{"size":1000,"mtime":1609178305117,"results":"25","hashOfConfig":"16"},{"size":1934,"mtime":1609810158234,"results":"26","hashOfConfig":"16"},{"size":6056,"mtime":1609810147935,"results":"27","hashOfConfig":"16"},{"size":9372,"mtime":1609810125543,"results":"28","hashOfConfig":"16"},{"size":3716,"mtime":1609810088243,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1hxmbbr",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\index.js",[],["65","66"],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\App.js",[],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\Registration.js",["67","68"],"import React from 'react';\r\nimport config from './config';\r\n\r\nimport ValidationError from './ValidationError'\r\nimport AuthApiService from './services/AuthApiService';\r\nimport TokenService from './services/TokenServices';\r\n\r\n\r\n\r\nclass Registration extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userName: {\r\n                value: '',\r\n                touched: false\r\n            },\r\n            password: {\r\n                value: '',\r\n                touched: false\r\n            },\r\n            repeatPassword: {\r\n                value: '',\r\n                touched: false\r\n            },\r\n            LogInUserID: 0,\r\n            isActive: true,\r\n            params: {},\r\n            formValidationError: ''\r\n        }\r\n    }\r\n\r\n    changeUsername(userName) {\r\n        this.setState({\r\n            userName: { value: userName, touched: true }\r\n        });\r\n    }\r\n\r\n    changePassword(password) {\r\n        this.setState({\r\n            password: { value: password, touched: true }\r\n        });\r\n    }\r\n\r\n    updateRepeatPassword(repeatPassword) {\r\n        this.setState({ repeatPassword: { value: repeatPassword, touched: true } });\r\n    }\r\n\r\n    //get the imput from the user\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { userName, password, repeatPassword } = event.target;\r\n \r\n        this.setState({ error: null })\r\n        AuthApiService.postUser({\r\n            user_name: userName.value,\r\n            password: password.value,\r\n        })\r\n\r\n            .then(response => {\r\n                console.log('user:', response)\r\n                userName.value = ''\r\n                password.value = ''\r\n                repeatPassword.value = ''\r\n                TokenService.saveAuthToken(response.authToken)\r\n                TokenService.saveUserId(response.id)\r\n                window.location = '/homepage'\r\n            })\r\n            .catch(res => {\r\n                this.setState({ error: res.error })\r\n            })\r\n    }\r\n\r\n    validateUserName() {\r\n        const userName = this.state.userName.value.trim();\r\n        if (userName.length === 0) {\r\n            return <p className='input-error'>Username is required</p>;\r\n        } else if (userName.length < 2) {\r\n            return <p className='input-error'>Username must be at least 2 characters long</p>;\r\n        }\r\n    }\r\n\r\n    validatePassword() {\r\n        const password = this.state.password.value.trim();\r\n        if (password.length === 0) {\r\n            return <p className='input-error'>Password is required</p>;\r\n        } else if (password.length < 6 || password.length > 72) {\r\n            return <p className='input-error'>Password must be between 6 and 72 characters long</p>;\r\n        } else if (!password.match(/[0-9]/)) {\r\n            return <p className='input-error'>Password must contain at least one number</p>;\r\n        }\r\n    }\r\n\r\n    validateRepeatPassword() {\r\n        const repeatPassword = this.state.repeatPassword.value.trim();\r\n        const password = this.state.password.value.trim();\r\n        // this.setState({submitButtonDisabled: 'disabled'});\r\n        if (repeatPassword != password) {\r\n            return <p className='input-error'>Passwords do not match</p>;\r\n        }\r\n        // else {\r\n        //     this.setState({submitButtonDisabled: ''});\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className=\"alert alert-info\">\r\n                <i className=\"fas fa-info\"></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className=\"registration\">\r\n\r\n                {/* <div className=\"alert alert-success\">\r\n                    <i className=\"fas fa-check\"></i> <strong>Success</strong> Account Activated Sucessfully!!\r\n                </div>\r\n    \r\n                <div className=\"alert alert-warning\">\r\n                    <i className=\"fas fa-exclamation\"></i> <strong>Warning</strong> Password does not meet complexity requirements!!\r\n                </div>\r\n    \r\n                <div className=\"alert alert-failure\">\r\n                    <i className=\"fas fa-times\"></i> <strong>Failure</strong> Registration Failed!! Please see System Adminstrator!!\r\n                </div> */}\r\n\r\n                <form className=\"registration-form\" onSubmit={this.handleSubmit}>\r\n                    {showErrorOutput}\r\n\r\n                    <h1>Convo-To-Go Registration</h1>\r\n\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"register-email\">Email</label>\r\n                        <input name='userName' type=\"text\" placeholder=\"email\" id=\"register-email\" onChange={e => this.changeUsername(e.target.value)} required />\r\n                        {this.state.userName.touched && (<ValidationError message={this.validateUserName()} />)}\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"register-password\">Password</label>\r\n                        <input name='password' type=\"password\" placeholder=\"password\" id=\"register-password\" onChange={e => this.changePassword(e.target.value)} required />\r\n                        {this.state.password.touched && (<ValidationError message={this.validatePassword()} />)}\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"register-confirm-password\">Confirm Password</label>\r\n                        <input name='repeatPassword' type=\"text\" placeholder=\"confirm-password\" id=\"register-confirm-password\" onChange={e => this.updateRepeatPassword(e.target.value)} required />\r\n                        {this.state.repeatPassword.touched && (<ValidationError message={this.validateRepeatPassword()} />)}\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                        <button type='submit' className=\"myButton\" disabled={this.state.submitButtonDisabled}>Register</button>\r\n                        <p>Already have an account? <a href=\"/signin\">Sign In</a></p>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Registration;","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\SignIn.js",[],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\config.js",["69"],"export default {\r\n  //API_ENDPOINT: \"http://localhost:8000/api\",\r\n  API_ENDPOINT: \"https://convo-to-go-server.herokuapp.com/api\",\r\n  TOKEN_KEY: 'convo-to-go',\r\n}","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\ValidationError.js",[],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\services\\TokenServices.js",[],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\services\\AuthApiService.js",[],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\Nav.js",[],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\Error.js",[],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\LandingPage.js",["70","71","72","73"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport config from './config'\r\nimport TokenService from './services/TokenServices'\r\n\r\n\r\nclass LandingPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            params: {},\r\n            formValidationError: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let currentUserId = TokenService.getUserId()\r\n        let currentUserToken = TokenService.getAuthToken()\r\n    \r\n        // if (!TokenService.hasAuthToken()) {\r\n        //     window.location = '/'\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className='alert alert-info'>\r\n                <i className='fas fa-info'></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className='sign-in'>\r\n                <h1>Welcome to Convo-To-Go</h1>\r\n                <p>This application was created to fulfill the need to create conversation anywhere, anytime! How often do you find yourself in a place or at an event and can't find the words to start a conversation? This application, upon registration and login, allow you to pick from a number of event types and select the 'convo' that is best for your situation. So What are you waiting for? Go converse!</p>\r\n                    <div className='form-item'>\r\n                        <button className='myButton'\r\n                        ><Link to=\"/signin\">Sign-In</Link></button>\r\n                    </div>\r\n                    <div className='form-item'>\r\n                        <button className='myButton'><Link to=\"/registration\">Register</Link></button> \r\n                    </div>\r\n            \r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\HomePage.js",["74","75","76"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport config from './config'\r\nimport TokenService from './services/TokenServices'\r\n\r\n\r\nexport default class HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            privateConvos: [],\r\n            formValidationError: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user_id = TokenService.getUserId()\r\n        let currentUserToken = TokenService.getAuthToken()\r\n\r\n        if (!TokenService.hasAuthToken()) {\r\n            window.location = '/'\r\n        }\r\n    }\r\n    render() {\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className='alert alert-info'>\r\n                <i className='fas fa-info'></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className='create-convo clearfix'>\r\n\r\n                <h2>Home Page</h2>\r\n                <div className='divTable blueTable media'>\r\n                        <div className='divTableHeading'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableHead'>Convo Events</div>\r\n                                {/* <div className='divTableHead'>Created Convos</div> */}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='divTableBody'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/education\">Education</Link>\r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/entertainment\">\r\n                                    Entertainment\r\n                                    </Link>\r\n                                </div>\r\n                                {/* <div className='divTableCell'>\r\n\r\n                                </div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                    <Link to=\"/convo-event-list/exercise\">\r\n                                        Exercise\r\n                                    </Link>    \r\n                                    </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/fashion\">\r\n                                    Fashion\r\n                                </Link>    \r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/food\">\r\n                                    Food\r\n                                </Link>    \r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/holidays\">\r\n                                    Holidays\r\n                                </Link>\r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/leisure\">\r\n                                Leisure</Link>\r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/technology\">\r\n                                    Technology\r\n                                    </Link>\r\n                                    </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/travel\">    \r\n                                    Travel\r\n                                    </Link>\r\n                                    </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/work\">\r\n                                    Work\r\n                                    </Link>\r\n                                    </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                {showErrorOutput}\r\n                \r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\CreateConvo.js",["77","78","79","80","81","82","83","84","85","86","87","88","89"],"import React from 'react'\r\n\r\nimport config from './config'\r\nimport TokenService from './services/TokenServices'\r\n\r\n\r\nclass CreateConvo extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            params: {},\r\n            dataParams: {},\r\n            formValidationError: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user_id = TokenService.getUserId()\r\n        let currentUserToken = TokenService.getAuthToken()\r\n        \r\n\r\n        if (!TokenService.hasAuthToken()) {\r\n            window.location = '/'\r\n        }\r\n    }\r\n\r\n    handleInput() {}\r\n\r\n\r\n\r\n    //enter assembly input from the user\r\n    handleConvo = (e) => {\r\n        e.preventDefault()\r\n        let user_id = TokenService.getUserId()\r\n\r\n        //create an object to store the search filters\r\n        const data = {}\r\n\r\n        //get all the form data from the form component\r\n        const formData = new FormData(e.target)\r\n        \r\n        //for each of the keys in form data populate it with form value\r\n        for (let value of formData) {\r\n            data[value[0]] = value[1]\r\n        }\r\n\r\n       \r\n\r\n        const { event_type, min_number_of_people, question, is_public} = data\r\n        \r\n        \r\n\r\n        if (user_id !== 1 || user_id !== 2) {\r\n            console.log('This is a private convo')\r\n            data.is_public = false;\r\n        }\r\n\r\n        else if (event_type === 'Select Event Type') {\r\n            console.log('Event Type not selected')\r\n            this.setState({\r\n                formValidationError: ' Please select an Event Type !!'\r\n            })\r\n        }\r\n        else if (min_number_of_people === 'Select Minimum # of People') {\r\n            console.log('How many people can you convo with?')\r\n            this.setState({\r\n                formValidationError: ' Please select a number of people'\r\n            })\r\n        }\r\n\r\n        else if (question === '') {\r\n            console.log('serial number not selected')\r\n            this.setState({\r\n                formValidationError: ' Please select a serial number !!'\r\n            })\r\n        }\r\n\r\n        //else {\r\n            //assigning the object from the form data to params in the state\r\n            this.setState({\r\n                params: data,\r\n                formValidationError: ''\r\n            })\r\n\r\n            //check if the state is populated with the search params data\r\n            //console.log(this.state.params)\r\n\r\n            // create payload and send it across we left of here!!!!\r\n            let show_ok_for_fashion = false\r\n            if (event_type == 'Fashion') {\r\n                show_ok_for_fashion = true\r\n            }\r\n            let show_ok_for_entertainment = false\r\n            if (event_type == 'Entertainment') {\r\n                show_ok_for_entertainment = true\r\n            }\r\n            let show_ok_for_exercise = false\r\n            if (event_type == 'Exercise') {\r\n                show_ok_for_exercise = true\r\n            }\r\n            let show_ok_for_travel = false\r\n            if (event_type == 'Travel') {\r\n                show_ok_for_travel = true\r\n            }\r\n            let show_ok_for_technology = false\r\n            if (event_type == 'Technology') {\r\n                show_ok_for_technology = true\r\n            }\r\n            let show_ok_for_holidays = false\r\n            if (event_type == 'Holidays') {\r\n                show_ok_for_holidays = true\r\n            }\r\n            let show_ok_for_education = false\r\n            if (event_type == 'Education') {\r\n                show_ok_for_education = true\r\n            }\r\n            let show_ok_for_work = false\r\n            if (event_type == 'Work') {\r\n                show_ok_for_work = true\r\n            }\r\n            let show_ok_for_food = false\r\n            if (event_type == 'Food') {\r\n                show_ok_for_food = true\r\n            }\r\n            let show_ok_for_leisure = false\r\n            if (event_type == 'Leisure') {\r\n                show_ok_for_leisure = true\r\n            }\r\n            \r\n            \r\n\r\n            let payload = {\r\n                user_id,\r\n                question,\r\n                is_favorited: false,\r\n                is_public: false,\r\n                min_number_of_people,\r\n                ok_for_entertainment: show_ok_for_entertainment,\r\n                ok_for_exercise: show_ok_for_exercise,\r\n                ok_for_travel: show_ok_for_travel,\r\n                ok_for_technology: show_ok_for_technology,\r\n                ok_for_fashion: show_ok_for_fashion,\r\n                ok_for_holidays: show_ok_for_holidays,\r\n                ok_for_education: show_ok_for_education,\r\n                ok_for_work: show_ok_for_work,\r\n                ok_for_food: show_ok_for_food,\r\n                ok_for_leisure: show_ok_for_leisure\r\n                }\r\n        \r\n\r\n            const url = `${config.API_ENDPOINT}/convos`;\r\n\r\n            fetch(url, {\r\n                method: \"POST\",\r\n                body: JSON.stringify(payload),\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                   \r\n                    if (!res.ok) {\r\n                        return res.json().then((error) => {\r\n                            throw error;\r\n                        });\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then((data) => {\r\n                    \r\n                    this.setState({ ConvoValues: data })\r\n                    \r\n                    // this.props.updateNote(data);\r\n                    // alert('Post added!');\r\n                    // window.location = '/create-convo'\r\n                })\r\n\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                    this.setState({ appError: error });\r\n                });\r\n        //}\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className='alert alert-info'>\r\n                <i className='fas fa-info'></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className='create-convo clearfix'>\r\n\r\n                <h2>Create a Convo</h2>\r\n                <form className='convo-details' onSubmit={this.handleConvo}>\r\n                    <div className='divTable blueTable media'>\r\n                        <div className='divTableHeading'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableHead'>Convo Identifiers</div>\r\n                                <div className='divTableHead'>Details</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='divTableBody'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>Convo Event Type</div>\r\n                                <select name=\"event_type\" id=\"event_type\" placeholder=\"Select Event Type\">\r\n                                    <option>Select Event Type</option>\r\n                                    <option>Entertainment</option>\r\n                                    <option>Exercise</option>\r\n                                    <option>Travel</option>\r\n                                    <option>Technology</option>\r\n                                    <option>Fashion</option>\r\n                                    <option>Holidays</option>\r\n                                    <option>Education</option>\r\n                                    <option>Work</option>\r\n                                    <option>Food</option>\r\n                                    <option>Leisure</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>Minimum Number of People</div>\r\n                                <select name=\"min_number_of_people\" id=\"min_number_of_people\">\r\n                                <option>Select Minimum # of People</option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3+</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>What's your Convo?</div>\r\n                                <input type=\"text\" placeholder=\"Enter Convo\"\r\n                                name=\"question\"\r\n                                id=\"question\"></input>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='fullWidth'>\r\n                        <div className='buttonWrapper clearfix'>\r\n                            <button type='submit' className='myButton'>Create Convo</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                {showErrorOutput}\r\n                \r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CreateConvo","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\ConvoEventList.js",["90","91"],"import React from 'react'\r\n\r\nimport config from './config'\r\nimport TokenService from './services/TokenServices'\r\n\r\n\r\nexport default class HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          convosInList: [],\r\n            error: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user_id = TokenService.getUserId()\r\n        let currentUserToken = TokenService.getAuthToken()\r\n        \r\n\r\n        if (!TokenService.hasAuthToken()) {\r\n            window.location = '/'\r\n        }\r\n        const eventName = this.props.match.params.meta;\r\n   \r\n        let getConvosByUserAndEventListUrl = `${config.API_ENDPOINT}/convos/by-user-end-list-type/${user_id}/${eventName}`;\r\n        \r\n        fetch(getConvosByUserAndEventListUrl)\r\n            .then((convosInList) => convosInList.json())\r\n            .then((convosInList) => {\r\n                this.setState({\r\n                  convosInList: convosInList,\r\n                });\r\n\r\n            })\r\n\r\n            .catch((error) => this.setState({ error }));\r\n    }\r\n    render() {\r\n\r\n        const capitalize = (s) => {\r\n            if (typeof s !== 'string') return ''\r\n            return s.charAt(0).toUpperCase() + s.slice(1)\r\n          }\r\n        // console.log(this.state.convosInList.length)\r\n        let showItemsPage = ''\r\n        //by default show there are no items\r\n        if (this.state.convosInList.length === 0) {\r\n            showItemsPage = <p>No items here</p>\r\n        }\r\n        // if there are items \r\n        else {\r\n\r\n            // display details for each one of the items\r\n            showItemsPage = this.state.convosInList.map((item, key) => {\r\n                if (item) {\r\n                    return (\r\n                    <div className='divTableBody'>    \r\n                    <div className='divTableRow' key = {key}> \r\n                        <div className='divTableCell'>\r\n                            <div>{item.question} </div>\r\n                        </div>\r\n                      \r\n                        <div className='divTableCell'>\r\n                            <div>{item.min_number_of_people} </div>\r\n                            <div>{item.is_favorited} </div>\r\n                            <div>{item.is_public} </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n\r\n        const eventName = capitalize(this.props.match.params.meta);\r\n        //for (let i = 0; i < )\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className='alert alert-info'>\r\n                <i className='fas fa-info'></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className='create-convo clearfix'>\r\n\r\n                <h2>{eventName} Convos</h2>\r\n                <div className='divTable blueTable media'>\r\n                        <div className='divTableHeading'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableHead'>\r\n                                    {eventName}\r\n                                </div>\r\n                                <div className='divTableHead'>\r\n                                    Minimum Number of People\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                       {showItemsPage}    \r\n                </div>\r\n\r\n                {showErrorOutput}\r\n                \r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n",{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":2,"column":8,"nodeType":"98","messageId":"99","endLine":2,"endColumn":14},{"ruleId":"100","severity":1,"message":"101","line":98,"column":28,"nodeType":"102","messageId":"103","endLine":98,"endColumn":30},{"ruleId":"104","severity":1,"message":"105","line":1,"column":1,"nodeType":"106","endLine":5,"endColumn":2},{"ruleId":"96","severity":1,"message":"97","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":14},{"ruleId":"96","severity":1,"message":"107","line":17,"column":13,"nodeType":"98","messageId":"99","endLine":17,"endColumn":26},{"ruleId":"96","severity":1,"message":"108","line":18,"column":13,"nodeType":"98","messageId":"99","endLine":18,"endColumn":29},{"ruleId":"96","severity":1,"message":"109","line":28,"column":13,"nodeType":"98","messageId":"99","endLine":28,"endColumn":28},{"ruleId":"96","severity":1,"message":"97","line":3,"column":8,"nodeType":"98","messageId":"99","endLine":3,"endColumn":14},{"ruleId":"96","severity":1,"message":"110","line":17,"column":13,"nodeType":"98","messageId":"99","endLine":17,"endColumn":20},{"ruleId":"96","severity":1,"message":"108","line":18,"column":13,"nodeType":"98","messageId":"99","endLine":18,"endColumn":29},{"ruleId":"96","severity":1,"message":"110","line":18,"column":13,"nodeType":"98","messageId":"99","endLine":18,"endColumn":20},{"ruleId":"96","severity":1,"message":"108","line":19,"column":13,"nodeType":"98","messageId":"99","endLine":19,"endColumn":29},{"ruleId":"96","severity":1,"message":"111","line":49,"column":61,"nodeType":"98","messageId":"99","endLine":49,"endColumn":70},{"ruleId":"100","severity":1,"message":"112","line":90,"column":28,"nodeType":"102","messageId":"103","endLine":90,"endColumn":30},{"ruleId":"100","severity":1,"message":"112","line":94,"column":28,"nodeType":"102","messageId":"103","endLine":94,"endColumn":30},{"ruleId":"100","severity":1,"message":"112","line":98,"column":28,"nodeType":"102","messageId":"103","endLine":98,"endColumn":30},{"ruleId":"100","severity":1,"message":"112","line":102,"column":28,"nodeType":"102","messageId":"103","endLine":102,"endColumn":30},{"ruleId":"100","severity":1,"message":"112","line":106,"column":28,"nodeType":"102","messageId":"103","endLine":106,"endColumn":30},{"ruleId":"100","severity":1,"message":"112","line":110,"column":28,"nodeType":"102","messageId":"103","endLine":110,"endColumn":30},{"ruleId":"100","severity":1,"message":"112","line":114,"column":28,"nodeType":"102","messageId":"103","endLine":114,"endColumn":30},{"ruleId":"100","severity":1,"message":"112","line":118,"column":28,"nodeType":"102","messageId":"103","endLine":118,"endColumn":30},{"ruleId":"100","severity":1,"message":"112","line":122,"column":28,"nodeType":"102","messageId":"103","endLine":122,"endColumn":30},{"ruleId":"100","severity":1,"message":"112","line":126,"column":28,"nodeType":"102","messageId":"103","endLine":126,"endColumn":30},{"ruleId":"96","severity":1,"message":"108","line":18,"column":13,"nodeType":"98","messageId":"99","endLine":18,"endColumn":29},{"ruleId":"113","severity":1,"message":"114","line":55,"column":69,"nodeType":"115","messageId":"116","endLine":55,"endColumn":71},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'currentUserId' is assigned a value but never used.","'currentUserToken' is assigned a value but never used.","'showErrorOutput' is assigned a value but never used.","'user_id' is assigned a value but never used.","'is_public' is assigned a value but never used.","Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]