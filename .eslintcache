[{"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\index.js":"1","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\App.js":"2","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\Registration.js":"3","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\SignIn.js":"4","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\config.js":"5","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\ValidationError.js":"6","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\services\\TokenServices.js":"7","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\services\\AuthApiService.js":"8","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\Nav.js":"9","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\Error.js":"10","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\LandingPage.js":"11","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\HomePage.js":"12","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\CreateConvo.js":"13","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\ConvoEventList.js":"14"},{"size":300,"mtime":1607996318776,"results":"15","hashOfConfig":"16"},{"size":1294,"mtime":1608678517923,"results":"17","hashOfConfig":"16"},{"size":6433,"mtime":1609791762881,"results":"18","hashOfConfig":"16"},{"size":3247,"mtime":1609790405852,"results":"19","hashOfConfig":"16"},{"size":161,"mtime":1609791457036,"results":"20","hashOfConfig":"16"},{"size":352,"mtime":1607995524868,"results":"21","hashOfConfig":"16"},{"size":795,"mtime":1607995636795,"results":"22","hashOfConfig":"16"},{"size":948,"mtime":1607995653709,"results":"23","hashOfConfig":"16"},{"size":2200,"mtime":1609202889732,"results":"24","hashOfConfig":"16"},{"size":1000,"mtime":1609178305117,"results":"25","hashOfConfig":"16"},{"size":2034,"mtime":1608253627151,"results":"26","hashOfConfig":"16"},{"size":6154,"mtime":1609204378458,"results":"27","hashOfConfig":"16"},{"size":9580,"mtime":1608573661668,"results":"28","hashOfConfig":"16"},{"size":3960,"mtime":1609182743836,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1v9j8pg",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\index.js",[],["63","64"],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\App.js",[],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\Registration.js",["65","66"],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\SignIn.js",[],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\config.js",["67"],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\ValidationError.js",[],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\services\\TokenServices.js",[],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\services\\AuthApiService.js",[],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\Nav.js",[],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\Error.js",[],"C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\LandingPage.js",["68","69"],"import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport config from './config'\r\nimport TokenService from './services/TokenServices'\r\n\r\n\r\nclass LandingPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            params: {},\r\n            formValidationError: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let currentUserId = TokenService.getUserId()\r\n        let currentUserToken = TokenService.getAuthToken()\r\n        console.log(currentUserId, currentUserToken)\r\n        console.log(TokenService.hasAuthToken())\r\n\r\n        // if (!TokenService.hasAuthToken()) {\r\n        //     window.location = '/'\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className='alert alert-info'>\r\n                <i className='fas fa-info'></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className='sign-in'>\r\n                <h1>Welcome to Convo-To-Go</h1>\r\n                <p>This application was created to fulfill the need to create conversation anywhere, anytime! How often do you find yourself in a place or at an event and can't find the words to start a conversation? This application, upon registration and login, allow you to pick from a number of event types and select the 'convo' that is best for your situation. So What are you waiting for? Go converse!</p>\r\n                    <div className='form-item'>\r\n                        <button className='myButton'\r\n                        ><Link to=\"/signin\">Sign-In</Link></button>\r\n                    </div>\r\n                    <div className='form-item'>\r\n                        <button className='myButton'><Link to=\"/registration\">Register</Link></button> \r\n                    </div>\r\n            \r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\HomePage.js",["70"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport config from './config'\r\nimport TokenService from './services/TokenServices'\r\n\r\n\r\nexport default class HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            privateConvos: [],\r\n            formValidationError: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user_id = TokenService.getUserId()\r\n        let currentUserToken = TokenService.getAuthToken()\r\n        console.log(user_id, currentUserToken)\r\n        console.log(TokenService.hasAuthToken())\r\n\r\n        if (!TokenService.hasAuthToken()) {\r\n            window.location = '/'\r\n        }\r\n    }\r\n    render() {\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className='alert alert-info'>\r\n                <i className='fas fa-info'></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className='create-convo clearfix'>\r\n\r\n                <h2>Home Page</h2>\r\n                <div className='divTable blueTable media'>\r\n                        <div className='divTableHeading'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableHead'>Convo Events</div>\r\n                                {/* <div className='divTableHead'>Created Convos</div> */}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='divTableBody'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/education\">Education</Link>\r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/entertainment\">\r\n                                    Entertainment\r\n                                    </Link>\r\n                                </div>\r\n                                {/* <div className='divTableCell'>\r\n\r\n                                </div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                    <Link to=\"/convo-event-list/exercise\">\r\n                                        Exercise\r\n                                    </Link>    \r\n                                    </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/fashion\">\r\n                                    Fashion\r\n                                </Link>    \r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/food\">\r\n                                    Food\r\n                                </Link>    \r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/holidays\">\r\n                                    Holidays\r\n                                </Link>\r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/leisure\">\r\n                                Leisure</Link>\r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/technology\">\r\n                                    Technology\r\n                                    </Link>\r\n                                    </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/travel\">    \r\n                                    Travel\r\n                                    </Link>\r\n                                    </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/work\">\r\n                                    Work\r\n                                    </Link>\r\n                                    </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                {showErrorOutput}\r\n                \r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\CreateConvo.js",["71","72","73","74","75","76","77","78","79","80","81"],"import React from 'react'\r\n\r\nimport config from './config'\r\nimport TokenService from './services/TokenServices'\r\n\r\n\r\nclass CreateConvo extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            params: {},\r\n            dataParams: {},\r\n            formValidationError: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user_id = TokenService.getUserId()\r\n        let currentUserToken = TokenService.getAuthToken()\r\n        console.log(user_id, currentUserToken)\r\n        console.log(TokenService.hasAuthToken())\r\n\r\n        if (!TokenService.hasAuthToken()) {\r\n            window.location = '/'\r\n        }\r\n    }\r\n\r\n    handleInput() {}\r\n\r\n\r\n\r\n    //enter assembly input from the user\r\n    handleConvo = (e) => {\r\n        e.preventDefault()\r\n        let user_id = TokenService.getUserId()\r\n\r\n        //create an object to store the search filters\r\n        const data = {}\r\n\r\n        //get all the form data from the form component\r\n        const formData = new FormData(e.target)\r\n        \r\n        //for each of the keys in form data populate it with form value\r\n        for (let value of formData) {\r\n            data[value[0]] = value[1]\r\n        }\r\n\r\n        console.log(data)\r\n\r\n        const { event_type, min_number_of_people, question, is_public} = data\r\n        \r\n        console.log(event_type)\r\n\r\n        if (user_id !== 1 || user_id !== 2) {\r\n            console.log('This is a private convo')\r\n            data.is_public = false;\r\n        }\r\n\r\n        else if (event_type === 'Select Event Type') {\r\n            console.log('Event Type not selected')\r\n            this.setState({\r\n                formValidationError: ' Please select an Event Type !!'\r\n            })\r\n        }\r\n        else if (min_number_of_people === 'Select Minimum # of People') {\r\n            console.log('How many people can you convo with?')\r\n            this.setState({\r\n                formValidationError: ' Please select a number of people'\r\n            })\r\n        }\r\n\r\n        else if (question === '') {\r\n            console.log('serial number not selected')\r\n            this.setState({\r\n                formValidationError: ' Please select a serial number !!'\r\n            })\r\n        }\r\n\r\n        //else {\r\n            //assigning the object from the form data to params in the state\r\n            this.setState({\r\n                params: data,\r\n                formValidationError: ''\r\n            })\r\n\r\n            //check if the state is populated with the search params data\r\n            console.log(this.state.params)\r\n\r\n            // create payload and send it across we left of here!!!!\r\n            let show_ok_for_fashion = false\r\n            if (event_type == 'Fashion') {\r\n                show_ok_for_fashion = true\r\n            }\r\n            let show_ok_for_entertainment = false\r\n            if (event_type == 'Entertainment') {\r\n                show_ok_for_entertainment = true\r\n            }\r\n            let show_ok_for_exercise = false\r\n            if (event_type == 'Exercise') {\r\n                show_ok_for_exercise = true\r\n            }\r\n            let show_ok_for_travel = false\r\n            if (event_type == 'Travel') {\r\n                show_ok_for_travel = true\r\n            }\r\n            let show_ok_for_technology = false\r\n            if (event_type == 'Technology') {\r\n                show_ok_for_technology = true\r\n            }\r\n            let show_ok_for_holidays = false\r\n            if (event_type == 'Holidays') {\r\n                show_ok_for_holidays = true\r\n            }\r\n            let show_ok_for_education = false\r\n            if (event_type == 'Education') {\r\n                show_ok_for_education = true\r\n            }\r\n            let show_ok_for_work = false\r\n            if (event_type == 'Work') {\r\n                show_ok_for_work = true\r\n            }\r\n            let show_ok_for_food = false\r\n            if (event_type == 'Food') {\r\n                show_ok_for_food = true\r\n            }\r\n            let show_ok_for_leisure = false\r\n            if (event_type == 'Leisure') {\r\n                show_ok_for_leisure = true\r\n            }\r\n            \r\n            \r\n\r\n            let payload = {\r\n                user_id,\r\n                question,\r\n                is_favorited: false,\r\n                is_public: false,\r\n                min_number_of_people,\r\n                ok_for_entertainment: show_ok_for_entertainment,\r\n                ok_for_exercise: show_ok_for_exercise,\r\n                ok_for_travel: show_ok_for_travel,\r\n                ok_for_technology: show_ok_for_technology,\r\n                ok_for_fashion: show_ok_for_fashion,\r\n                ok_for_holidays: show_ok_for_holidays,\r\n                ok_for_education: show_ok_for_education,\r\n                ok_for_work: show_ok_for_work,\r\n                ok_for_food: show_ok_for_food,\r\n                ok_for_leisure: show_ok_for_leisure\r\n                }\r\n            console.log(payload)\r\n\r\n            const url = `${config.API_ENDPOINT}/convos`;\r\n\r\n            fetch(url, {\r\n                method: \"POST\",\r\n                body: JSON.stringify(payload),\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    console.log(res)\r\n                    if (!res.ok) {\r\n                        return res.json().then((error) => {\r\n                            throw error;\r\n                        });\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then((data) => {\r\n                    console.log(data)\r\n                    this.setState({ ConvoValues: data })\r\n                    console.log(this.state)\r\n                    // this.props.updateNote(data);\r\n                    // alert('Post added!');\r\n                    // window.location = '/create-convo'\r\n                })\r\n\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                    this.setState({ appError: error });\r\n                });\r\n        //}\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className='alert alert-info'>\r\n                <i className='fas fa-info'></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className='create-convo clearfix'>\r\n\r\n                <h2>Create a Convo</h2>\r\n                <form className='convo-details' onSubmit={this.handleConvo}>\r\n                    <div className='divTable blueTable media'>\r\n                        <div className='divTableHeading'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableHead'>Convo Identifiers</div>\r\n                                <div className='divTableHead'>Details</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='divTableBody'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>Convo Event Type</div>\r\n                                <select name=\"event_type\" id=\"event_type\" placeholder=\"Select Event Type\">\r\n                                    <option>Select Event Type</option>\r\n                                    <option>Entertainment</option>\r\n                                    <option>Exercise</option>\r\n                                    <option>Travel</option>\r\n                                    <option>Technology</option>\r\n                                    <option>Fashion</option>\r\n                                    <option>Holidays</option>\r\n                                    <option>Education</option>\r\n                                    <option>Work</option>\r\n                                    <option>Food</option>\r\n                                    <option>Leisure</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>Minimum Number of People</div>\r\n                                <select name=\"min_number_of_people\" id=\"min_number_of_people\">\r\n                                <option>Select Minimum # of People</option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3+</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>What's your Convo?</div>\r\n                                <input type=\"text\" placeholder=\"Enter Convo\"\r\n                                name=\"question\"\r\n                                id=\"question\"></input>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='fullWidth'>\r\n                        <div className='buttonWrapper clearfix'>\r\n                            <button type='submit' className='myButton'>Create Convo</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                {showErrorOutput}\r\n                \r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CreateConvo","C:\\Users\\aminn\\capstones\\convo-to-go\\convo-to-go-client\\src\\ConvoEventList.js",["82"],"import React from 'react'\r\n\r\nimport config from './config'\r\nimport TokenService from './services/TokenServices'\r\n\r\n\r\nexport default class HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          convosInList: [],\r\n            error: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user_id = TokenService.getUserId()\r\n        let currentUserToken = TokenService.getAuthToken()\r\n        console.log(user_id, currentUserToken)\r\n        console.log(TokenService.hasAuthToken())\r\n\r\n        if (!TokenService.hasAuthToken()) {\r\n            window.location = '/'\r\n        }\r\n        const eventName = this.props.match.params.meta;\r\n        console.log(eventName)\r\n        let getConvosByUserAndEventListUrl = `${config.API_ENDPOINT}/convos/by-user-end-list-type/${user_id}/${eventName}`;\r\n        console.log(getConvosByUserAndEventListUrl)\r\n        fetch(getConvosByUserAndEventListUrl)\r\n            .then((convosInList) => convosInList.json())\r\n            .then((convosInList) => {\r\n                console.log(convosInList)\r\n                this.setState({\r\n                  convosInList: convosInList,\r\n                });\r\n                // console.log(this.state);\r\n            })\r\n\r\n            .catch((error) => this.setState({ error }));\r\n    }\r\n    render() {\r\n\r\n        const capitalize = (s) => {\r\n            if (typeof s !== 'string') return ''\r\n            return s.charAt(0).toUpperCase() + s.slice(1)\r\n          }\r\n        // console.log(this.state.convosInList.length)\r\n        let showItemsPage = ''\r\n        //by default show there are no items\r\n        if (this.state.convosInList.length === 0) {\r\n            showItemsPage = <p>No items here</p>\r\n        }\r\n        // if there are items \r\n        else {\r\n\r\n            // display details for each one of the items\r\n            showItemsPage = this.state.convosInList.map((item, key) => {\r\n                if (item) {\r\n                    return (\r\n                    <div className='divTableBody'>    \r\n                    <div className='divTableRow' key = {key}> \r\n                        <div className='divTableCell'>\r\n                            <div>{item.question} </div>\r\n                        </div>\r\n                      \r\n                        <div className='divTableCell'>\r\n                            <div>{item.min_number_of_people} </div>\r\n                            <div>{item.is_favorited} </div>\r\n                            <div>{item.is_public} </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n\r\n        const eventName = capitalize(this.props.match.params.meta);\r\n        //for (let i = 0; i < )\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className='alert alert-info'>\r\n                <i className='fas fa-info'></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className='create-convo clearfix'>\r\n\r\n                <h2>{eventName} Convos</h2>\r\n                <div className='divTable blueTable media'>\r\n                        <div className='divTableHeading'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableHead'>\r\n                                    {eventName}\r\n                                </div>\r\n                                <div className='divTableHead'>\r\n                                    Minimum Number of People\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                       {showItemsPage}    \r\n                </div>\r\n\r\n                {showErrorOutput}\r\n                \r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n",{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":2,"column":8,"nodeType":"89","messageId":"90","endLine":2,"endColumn":14},{"ruleId":"91","severity":1,"message":"92","line":98,"column":28,"nodeType":"93","messageId":"94","endLine":98,"endColumn":30},{"ruleId":"95","severity":1,"message":"96","line":1,"column":1,"nodeType":"97","endLine":5,"endColumn":2},{"ruleId":"87","severity":1,"message":"88","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"98","line":30,"column":13,"nodeType":"89","messageId":"90","endLine":30,"endColumn":28},{"ruleId":"87","severity":1,"message":"88","line":3,"column":8,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"99","line":50,"column":61,"nodeType":"89","messageId":"90","endLine":50,"endColumn":70},{"ruleId":"91","severity":1,"message":"100","line":91,"column":28,"nodeType":"93","messageId":"94","endLine":91,"endColumn":30},{"ruleId":"91","severity":1,"message":"100","line":95,"column":28,"nodeType":"93","messageId":"94","endLine":95,"endColumn":30},{"ruleId":"91","severity":1,"message":"100","line":99,"column":28,"nodeType":"93","messageId":"94","endLine":99,"endColumn":30},{"ruleId":"91","severity":1,"message":"100","line":103,"column":28,"nodeType":"93","messageId":"94","endLine":103,"endColumn":30},{"ruleId":"91","severity":1,"message":"100","line":107,"column":28,"nodeType":"93","messageId":"94","endLine":107,"endColumn":30},{"ruleId":"91","severity":1,"message":"100","line":111,"column":28,"nodeType":"93","messageId":"94","endLine":111,"endColumn":30},{"ruleId":"91","severity":1,"message":"100","line":115,"column":28,"nodeType":"93","messageId":"94","endLine":115,"endColumn":30},{"ruleId":"91","severity":1,"message":"100","line":119,"column":28,"nodeType":"93","messageId":"94","endLine":119,"endColumn":30},{"ruleId":"91","severity":1,"message":"100","line":123,"column":28,"nodeType":"93","messageId":"94","endLine":123,"endColumn":30},{"ruleId":"91","severity":1,"message":"100","line":127,"column":28,"nodeType":"93","messageId":"94","endLine":127,"endColumn":30},{"ruleId":"101","severity":1,"message":"102","line":57,"column":69,"nodeType":"103","messageId":"104","endLine":57,"endColumn":71},"no-native-reassign",["105"],"no-negated-in-lhs",["106"],"no-unused-vars","'config' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'showErrorOutput' is assigned a value but never used.","'is_public' is assigned a value but never used.","Expected '===' and instead saw '=='.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-global-assign","no-unsafe-negation"]