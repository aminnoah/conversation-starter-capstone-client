{"version":3,"sources":["config.js","services/TokenServices.js","HomePage.js","LandingPage.js","ValidationError.js","services/AuthApiService.js","Registration.js","SignIn.js","CreateConvo.js","ConvoEventList.js","Nav.js","Error.js","App.js","index.js"],"names":["TokenService","saveAuthToken","token","window","sessionStorage","setItem","config","getAuthToken","getItem","clearAuthToken","removeItem","clear","hasAuthToken","makeBasicAuthToken","userName","password","btoa","saveUserId","userId","getUserId","user_id","HomePage","props","state","privateConvos","formValidationError","currentUserToken","console","log","location","showErrorOutput","this","className","to","React","Component","LandingPage","params","currentUserId","ValidationError","message","AuthApiService","postLogin","credentials","fetch","method","headers","body","JSON","stringify","then","res","ok","json","e","Promise","reject","catch","err","postUser","user","Registration","handleSubmit","event","preventDefault","target","repeatPassword","value","setState","error","user_name","response","authToken","id","touched","LogInUserID","isActive","trim","length","match","onSubmit","htmlFor","name","type","placeholder","onChange","changeUsername","required","validateUserName","changePassword","validatePassword","updateRepeatPassword","validateRepeatPassword","disabled","submitButtonDisabled","href","SignIn","CreateConvo","handleConvo","data","formData","FormData","event_type","min_number_of_people","question","is_public","show_ok_for_fashion","show_ok_for_entertainment","show_ok_for_exercise","show_ok_for_travel","show_ok_for_technology","show_ok_for_holidays","show_ok_for_education","show_ok_for_work","show_ok_for_food","show_ok_for_leisure","payload","is_favorited","ok_for_entertainment","ok_for_exercise","ok_for_travel","ok_for_technology","ok_for_fashion","ok_for_holidays","ok_for_education","ok_for_work","ok_for_food","ok_for_leisure","url","ConvoValues","appError","dataParams","convosInList","eventName","meta","getConvosByUserAndEventListUrl","showItemsPage","map","item","key","s","charAt","toUpperCase","slice","navbar","logOutClick","exact","onClick","Error","App","Nav","path","component","ConvoEventList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06672529.chunk.js","sourcesContent":["export default {\r\n  //API_ENDPOINT: \"http://localhost:8000/api\",\r\n  API_ENDPOINT: \"https://convo-to-go-server.herokuapp.com/api\",\r\n  TOKEN_KEY: 'convo-to-go',\r\n}","import config from '../config'\r\n\r\nconst TokenService = {\r\n    saveAuthToken(token) {\r\n        window.sessionStorage.setItem(config.TOKEN_KEY, token)\r\n    },\r\n    getAuthToken() {\r\n        return window.sessionStorage.getItem(config.TOKEN_KEY)\r\n    },\r\n    clearAuthToken() {\r\n        window.sessionStorage.removeItem(config.TOKEN_KEY)\r\n        sessionStorage.clear();\r\n    },\r\n    hasAuthToken() {\r\n        return !!TokenService.getAuthToken()\r\n    },\r\n    makeBasicAuthToken(userName, password) {\r\n        return window.btoa(`${userName}:${password}`)\r\n    },\r\n    saveUserId(userId) {\r\n        return window.sessionStorage.setItem('user_id', userId);\r\n    },\r\n    getUserId(user_id) {\r\n        return window.sessionStorage.getItem('user_id', user_id)\r\n    }\r\n\r\n}\r\n\r\nexport default TokenService","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport config from './config'\r\nimport TokenService from './services/TokenServices'\r\n\r\n\r\nexport default class HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            privateConvos: [],\r\n            formValidationError: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user_id = TokenService.getUserId()\r\n        let currentUserToken = TokenService.getAuthToken()\r\n        console.log(user_id, currentUserToken)\r\n        console.log(TokenService.hasAuthToken())\r\n\r\n        if (!TokenService.hasAuthToken()) {\r\n            window.location = '/'\r\n        }\r\n    }\r\n    render() {\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className='alert alert-info'>\r\n                <i className='fas fa-info'></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className='create-convo clearfix'>\r\n\r\n                <h2>Home Page</h2>\r\n                <div className='divTable blueTable media'>\r\n                        <div className='divTableHeading'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableHead'>Convo Events</div>\r\n                                {/* <div className='divTableHead'>Created Convos</div> */}\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className='divTableBody'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/education\">Education</Link>\r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/entertainment\">\r\n                                    Entertainment\r\n                                    </Link>\r\n                                </div>\r\n                                {/* <div className='divTableCell'>\r\n\r\n                                </div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                    <Link to=\"/convo-event-list/exercise\">\r\n                                        Exercise\r\n                                    </Link>    \r\n                                    </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/fashion\">\r\n                                    Fashion\r\n                                </Link>    \r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/food\">\r\n                                    Food\r\n                                </Link>    \r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/holidays\">\r\n                                    Holidays\r\n                                </Link>\r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/leisure\">\r\n                                Leisure</Link>\r\n                                </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/technology\">\r\n                                    Technology\r\n                                    </Link>\r\n                                    </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/travel\">    \r\n                                    Travel\r\n                                    </Link>\r\n                                    </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>\r\n                                <Link to=\"/convo-event-list/work\">\r\n                                    Work\r\n                                    </Link>\r\n                                    </div>\r\n                                {/* <div className='divTableCell'></div> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                {showErrorOutput}\r\n                \r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport config from './config'\r\nimport TokenService from './services/TokenServices'\r\n\r\n\r\nclass LandingPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            params: {},\r\n            formValidationError: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let currentUserId = TokenService.getUserId()\r\n        let currentUserToken = TokenService.getAuthToken()\r\n        console.log(currentUserId, currentUserToken)\r\n        console.log(TokenService.hasAuthToken())\r\n\r\n        // if (!TokenService.hasAuthToken()) {\r\n        //     window.location = '/'\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className='alert alert-info'>\r\n                <i className='fas fa-info'></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className='sign-in'>\r\n                <h1>Welcome to Convo-To-Go</h1>\r\n                <p>This application was created to fulfill the need to create conversation anywhere, anytime! How often do you find yourself in a place or at an event and can't find the words to start a conversation? This application, upon registration and login, allow you to pick from a number of event types and select the 'convo' that is best for your situation. So What are you waiting for? Go converse!</p>\r\n                    <div className='form-item'>\r\n                        <button className='myButton'\r\n                        ><Link to=\"/signin\">Sign-In</Link></button>\r\n                    </div>\r\n                    <div className='form-item'>\r\n                        <button className='myButton'><Link to=\"/registration\">Register</Link></button> \r\n                    </div>\r\n            \r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LandingPage","import React from 'react'\r\n\r\nexport default function ValidationError(props) {\r\n    if (props.message) {\r\n        return (\r\n            <div className=\"alert alert-info\">\r\n                <i className=\"fas fa-info\"></i>\r\n                <strong>Info</strong>\r\n                {props.message}\r\n            </div>\r\n        );\r\n    }\r\n    return <></>\r\n\r\n}","import config from '../config'\r\n\r\nconst AuthApiService = {\r\n  postLogin(credentials) {\r\n    return fetch(`${config.API_ENDPOINT}/auth/login`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(credentials),\r\n\r\n      })\r\n      .then(res =>\r\n        (!res.ok) ?\r\n        res.json().then(e => Promise.reject(e)) :\r\n        res.json()\r\n      )\r\n      .catch(err => {\r\n        console.log('error:', err)\r\n      })\r\n  },\r\n  postUser(user) {\r\n    return fetch(`${config.API_ENDPOINT}/users`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(user),\r\n      })\r\n      .then(res =>\r\n      (!res.ok) ?\r\n      res.json().then(e => Promise.reject(e)) :\r\n      res.json()\r\n      )\r\n      .catch(err => {\r\n        console.log('error:', err)\r\n      })\r\n  },\r\n}\r\n\r\nexport default AuthApiService","import React from 'react';\r\nimport config from './config';\r\n\r\nimport ValidationError from './ValidationError'\r\nimport AuthApiService from './services/AuthApiService';\r\nimport TokenService from './services/TokenServices';\r\n\r\n\r\n\r\nclass Registration extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            userName: {\r\n                value: '',\r\n                touched: false\r\n            },\r\n            password: {\r\n                value: '',\r\n                touched: false\r\n            },\r\n            repeatPassword: {\r\n                value: '',\r\n                touched: false\r\n            },\r\n            LogInUserID: 0,\r\n            isActive: true,\r\n            params: {},\r\n            formValidationError: ''\r\n        }\r\n    }\r\n\r\n    changeUsername(userName) {\r\n        this.setState({\r\n            userName: { value: userName, touched: true }\r\n        });\r\n    }\r\n\r\n    changePassword(password) {\r\n        this.setState({\r\n            password: { value: password, touched: true }\r\n        });\r\n    }\r\n\r\n    updateRepeatPassword(repeatPassword) {\r\n        this.setState({ repeatPassword: { value: repeatPassword, touched: true } });\r\n    }\r\n\r\n    //get the imput from the user\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { userName, password, repeatPassword } = event.target;\r\n        console.log('username:', userName.value, 'password:', password.value);\r\n        this.setState({ error: null })\r\n        AuthApiService.postUser({\r\n            user_name: userName.value,\r\n            password: password.value,\r\n        })\r\n\r\n            .then(response => {\r\n                console.log('user:', response)\r\n                userName.value = ''\r\n                password.value = ''\r\n                repeatPassword.value = ''\r\n                TokenService.saveAuthToken(response.authToken)\r\n                TokenService.saveUserId(response.id)\r\n                window.location = '/landing'\r\n            })\r\n            .catch(res => {\r\n                this.setState({ error: res.error })\r\n            })\r\n    }\r\n\r\n    validateUserName() {\r\n        const userName = this.state.userName.value.trim();\r\n        if (userName.length === 0) {\r\n            return <p className='input-error'>Username is required</p>;\r\n        } else if (userName.length < 2) {\r\n            return <p className='input-error'>Username must be at least 2 characters long</p>;\r\n        }\r\n    }\r\n\r\n    validatePassword() {\r\n        const password = this.state.password.value.trim();\r\n        if (password.length === 0) {\r\n            return <p className='input-error'>Password is required</p>;\r\n        } else if (password.length < 6 || password.length > 72) {\r\n            return <p className='input-error'>Password must be between 6 and 72 characters long</p>;\r\n        } else if (!password.match(/[0-9]/)) {\r\n            return <p className='input-error'>Password must contain at least one number</p>;\r\n        }\r\n    }\r\n\r\n    validateRepeatPassword() {\r\n        const repeatPassword = this.state.repeatPassword.value.trim();\r\n        const password = this.state.password.value.trim();\r\n        // this.setState({submitButtonDisabled: 'disabled'});\r\n        if (repeatPassword != password) {\r\n            return <p className='input-error'>Passwords do not match</p>;\r\n        }\r\n        // else {\r\n        //     this.setState({submitButtonDisabled: ''});\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className=\"alert alert-info\">\r\n                <i className=\"fas fa-info\"></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className=\"registration\">\r\n\r\n                {/* <div className=\"alert alert-success\">\r\n                    <i className=\"fas fa-check\"></i> <strong>Success</strong> Account Activated Sucessfully!!\r\n                </div>\r\n    \r\n                <div className=\"alert alert-warning\">\r\n                    <i className=\"fas fa-exclamation\"></i> <strong>Warning</strong> Password does not meet complexity requirements!!\r\n                </div>\r\n    \r\n                <div className=\"alert alert-failure\">\r\n                    <i className=\"fas fa-times\"></i> <strong>Failure</strong> Registration Failed!! Please see System Adminstrator!!\r\n                </div> */}\r\n\r\n                <form className=\"registration-form\" onSubmit={this.handleSubmit}>\r\n                    {showErrorOutput}\r\n\r\n                    <h1>Convo-To-Go Registration</h1>\r\n\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"register-email\">Email</label>\r\n                        <input name='userName' type=\"text\" placeholder=\"email\" id=\"register-email\" onChange={e => this.changeUsername(e.target.value)} required />\r\n                        {this.state.userName.touched && (<ValidationError message={this.validateUserName()} />)}\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"register-password\">Password</label>\r\n                        <input name='password' type=\"text\" placeholder=\"password\" id=\"register-password\" onChange={e => this.changePassword(e.target.value)} required />\r\n                        {this.state.password.touched && (<ValidationError message={this.validatePassword()} />)}\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                        <label htmlFor=\"register-confirm-password\">Confirm Password</label>\r\n                        <input name='repeatPassword' type=\"text\" placeholder=\"confirm-password\" id=\"register-confirm-password\" onChange={e => this.updateRepeatPassword(e.target.value)} required />\r\n                        {this.state.repeatPassword.touched && (<ValidationError message={this.validateRepeatPassword()} />)}\r\n                    </div>\r\n\r\n                    <div className=\"form-item\">\r\n                        <button type='submit' className=\"myButton\" disabled={this.state.submitButtonDisabled}>Register</button>\r\n                        <p>Already have an account? <a href=\"/signin\">Sign In</a></p>\r\n                    </div>\r\n                </form>\r\n            </section>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Registration;","import React from 'react'\r\n\r\n\r\nimport AuthApiService from './services/AuthApiService' \r\nimport TokenService from './services/TokenServices' \r\n\r\n\r\n\r\nclass SignIn extends React.Component {\r\n    constructor(props) {\r\n        super(props) \r\n        this.state = {\r\n            userName: {\r\n                value: ''\r\n            },\r\n            password: {\r\n                value: ''\r\n            },\r\n            LogInUserID: 0,\r\n            error: null,\r\n            params: {},\r\n            formValidationError: ''\r\n        } \r\n    }\r\n\r\n    changeUsername(userName) {\r\n        this.setState({ userName: { value: userName } }) \r\n    }\r\n\r\n    changePassword(password) {\r\n        this.setState({ password: { value: password } }) \r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault() \r\n        const { userName, password } = event.target\r\n        console.log('username:', userName.value, 'password:', password.value) \r\n        AuthApiService.postLogin({\r\n            user_name: userName.value,\r\n            password: password.value,\r\n        })\r\n\r\n            .then(response => {\r\n                console.log('response ID', response)\r\n                userName.value = ''\r\n                password.value = ''\r\n                TokenService.saveAuthToken(response.authToken)\r\n                TokenService.saveUserId(response.userId)\r\n                window.location = '/homepage'\r\n            })\r\n            .then(response => {\r\n                console.log('response:', response)\r\n            })\r\n            .catch(err => {\r\n                console.log(err) \r\n            }) \r\n    }\r\n\r\n\r\n    render() {\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className='alert alert-info'>\r\n                <i className='fas fa-info'></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className='sign-in'>\r\n\r\n                <form className='sign-in-form' onSubmit={this.handleSubmit}>\r\n\r\n                    {showErrorOutput}\r\n\r\n                    <h1>Convo-To-Go Sign-In</h1>\r\n\r\n                    <div className='form-item'>\r\n                        <label htmlFor='sign-in-email'>Email</label>\r\n                        <input name='userName' type='text' placeholder='email' onChange={e => this.changeUsername(e.target.value)} required id='sign-in-email' />\r\n                    </div>\r\n\r\n                    <div className='form-item'>\r\n                        <label htmlFor='sign-in-password'>Password</label>\r\n                        <input name='password' type='text' placeholder='password' onChange={e => this.changePassword(e.target.value)} required id='sign-in-password' />\r\n                    </div>\r\n\r\n                    <div className='form-item'>\r\n                        <button type='submit' className='myButton'>Sign-In</button>\r\n                        <p>Need to create an account? <a href='/registration'>Register</a></p>\r\n                    </div>\r\n\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignIn","import React from 'react'\r\n\r\nimport config from './config'\r\nimport TokenService from './services/TokenServices'\r\n\r\n\r\nclass CreateConvo extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            params: {},\r\n            dataParams: {},\r\n            formValidationError: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user_id = TokenService.getUserId()\r\n        let currentUserToken = TokenService.getAuthToken()\r\n        console.log(user_id, currentUserToken)\r\n        console.log(TokenService.hasAuthToken())\r\n\r\n        if (!TokenService.hasAuthToken()) {\r\n            window.location = '/'\r\n        }\r\n    }\r\n\r\n    handleInput() {}\r\n\r\n\r\n\r\n    //enter assembly input from the user\r\n    handleConvo = (e) => {\r\n        e.preventDefault()\r\n        let user_id = TokenService.getUserId()\r\n\r\n        //create an object to store the search filters\r\n        const data = {}\r\n\r\n        //get all the form data from the form component\r\n        const formData = new FormData(e.target)\r\n        \r\n        //for each of the keys in form data populate it with form value\r\n        for (let value of formData) {\r\n            data[value[0]] = value[1]\r\n        }\r\n\r\n        console.log(data)\r\n\r\n        const { event_type, min_number_of_people, question, is_public} = data\r\n        \r\n        console.log(event_type)\r\n\r\n        if (user_id !== 1 || user_id !== 2) {\r\n            console.log('This is a private convo')\r\n            data.is_public = false;\r\n        }\r\n\r\n        else if (event_type === 'Select Event Type') {\r\n            console.log('Event Type not selected')\r\n            this.setState({\r\n                formValidationError: ' Please select an Event Type !!'\r\n            })\r\n        }\r\n        else if (min_number_of_people === 'Select Minimum # of People') {\r\n            console.log('How many people can you convo with?')\r\n            this.setState({\r\n                formValidationError: ' Please select a number of people'\r\n            })\r\n        }\r\n\r\n        else if (question === '') {\r\n            console.log('serial number not selected')\r\n            this.setState({\r\n                formValidationError: ' Please select a serial number !!'\r\n            })\r\n        }\r\n\r\n        //else {\r\n            //assigning the object from the form data to params in the state\r\n            this.setState({\r\n                params: data,\r\n                formValidationError: ''\r\n            })\r\n\r\n            //check if the state is populated with the search params data\r\n            console.log(this.state.params)\r\n\r\n            // create payload and send it across we left of here!!!!\r\n            let show_ok_for_fashion = false\r\n            if (event_type == 'Fashion') {\r\n                show_ok_for_fashion = true\r\n            }\r\n            let show_ok_for_entertainment = false\r\n            if (event_type == 'Entertainment') {\r\n                show_ok_for_entertainment = true\r\n            }\r\n            let show_ok_for_exercise = false\r\n            if (event_type == 'Exercise') {\r\n                show_ok_for_exercise = true\r\n            }\r\n            let show_ok_for_travel = false\r\n            if (event_type == 'Travel') {\r\n                show_ok_for_travel = true\r\n            }\r\n            let show_ok_for_technology = false\r\n            if (event_type == 'Technology') {\r\n                show_ok_for_technology = true\r\n            }\r\n            let show_ok_for_holidays = false\r\n            if (event_type == 'Holidays') {\r\n                show_ok_for_holidays = true\r\n            }\r\n            let show_ok_for_education = false\r\n            if (event_type == 'Education') {\r\n                show_ok_for_education = true\r\n            }\r\n            let show_ok_for_work = false\r\n            if (event_type == 'Work') {\r\n                show_ok_for_work = true\r\n            }\r\n            let show_ok_for_food = false\r\n            if (event_type == 'Food') {\r\n                show_ok_for_food = true\r\n            }\r\n            let show_ok_for_leisure = false\r\n            if (event_type == 'Leisure') {\r\n                show_ok_for_leisure = true\r\n            }\r\n            \r\n            \r\n\r\n            let payload = {\r\n                user_id,\r\n                question,\r\n                is_favorited: false,\r\n                is_public: false,\r\n                min_number_of_people,\r\n                ok_for_entertainment: show_ok_for_entertainment,\r\n                ok_for_exercise: show_ok_for_exercise,\r\n                ok_for_travel: show_ok_for_travel,\r\n                ok_for_technology: show_ok_for_technology,\r\n                ok_for_fashion: show_ok_for_fashion,\r\n                ok_for_holidays: show_ok_for_holidays,\r\n                ok_for_education: show_ok_for_education,\r\n                ok_for_work: show_ok_for_work,\r\n                ok_for_food: show_ok_for_food,\r\n                ok_for_leisure: show_ok_for_leisure\r\n                }\r\n            console.log(payload)\r\n\r\n            const url = `${config.API_ENDPOINT}/convos`;\r\n\r\n            fetch(url, {\r\n                method: \"POST\",\r\n                body: JSON.stringify(payload),\r\n                headers: {\r\n                    \"content-type\": \"application/json\",\r\n                },\r\n            })\r\n                .then((res) => {\r\n                    console.log(res)\r\n                    if (!res.ok) {\r\n                        return res.json().then((error) => {\r\n                            throw error;\r\n                        });\r\n                    }\r\n                    return res.json();\r\n                })\r\n                .then((data) => {\r\n                    console.log(data)\r\n                    this.setState({ ConvoValues: data })\r\n                    console.log(this.state)\r\n                    // this.props.updateNote(data);\r\n                    // alert('Post added!');\r\n                    // window.location = '/create-convo'\r\n                })\r\n\r\n                .catch((error) => {\r\n                    console.log(error)\r\n                    this.setState({ appError: error });\r\n                });\r\n        //}\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className='alert alert-info'>\r\n                <i className='fas fa-info'></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className='create-convo clearfix'>\r\n\r\n                <h2>Create a Convo</h2>\r\n                <form className='convo-details' onSubmit={this.handleConvo}>\r\n                    <div className='divTable blueTable media'>\r\n                        <div className='divTableHeading'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableHead'>Convo Identifiers</div>\r\n                                <div className='divTableHead'>Details</div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='divTableBody'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>Convo Event Type</div>\r\n                                <select name=\"event_type\" id=\"event_type\" placeholder=\"Select Event Type\">\r\n                                    <option>Select Event Type</option>\r\n                                    <option>Entertainment</option>\r\n                                    <option>Exercise</option>\r\n                                    <option>Travel</option>\r\n                                    <option>Technology</option>\r\n                                    <option>Fashion</option>\r\n                                    <option>Holidays</option>\r\n                                    <option>Education</option>\r\n                                    <option>Work</option>\r\n                                    <option>Food</option>\r\n                                    <option>Leisure</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>Minimum Number of People</div>\r\n                                <select name=\"min_number_of_people\" id=\"min_number_of_people\">\r\n                                <option>Select Minimum # of People</option>\r\n                                <option>1</option>\r\n                                <option>2</option>\r\n                                <option>3+</option>\r\n                                </select>\r\n                            </div>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableCell'>What's your Convo?</div>\r\n                                <input type=\"text\" placeholder=\"Enter Convo\"\r\n                                name=\"question\"\r\n                                id=\"question\"></input>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='fullWidth'>\r\n                        <div className='buttonWrapper clearfix'>\r\n                            <button type='submit' className='myButton'>Create Convo</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n                {showErrorOutput}\r\n                \r\n            </section>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CreateConvo","import React from 'react'\r\n\r\nimport config from './config'\r\nimport TokenService from './services/TokenServices'\r\n\r\n\r\nexport default class HomePage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n          convosInList: [],\r\n            error: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let user_id = TokenService.getUserId()\r\n        let currentUserToken = TokenService.getAuthToken()\r\n        console.log(user_id, currentUserToken)\r\n        console.log(TokenService.hasAuthToken())\r\n\r\n        if (!TokenService.hasAuthToken()) {\r\n            window.location = '/'\r\n        }\r\n        const eventName = this.props.match.params.meta;\r\n        console.log(eventName)\r\n        let getConvosByUserAndEventListUrl = `${config.API_ENDPOINT}/convos/by-user-end-list-type/${user_id}/${eventName}`;\r\n        console.log(getConvosByUserAndEventListUrl)\r\n        fetch(getConvosByUserAndEventListUrl)\r\n            .then((convosInList) => convosInList.json())\r\n            .then((convosInList) => {\r\n                console.log(convosInList)\r\n                this.setState({\r\n                  convosInList: convosInList,\r\n                });\r\n                // console.log(this.state);\r\n            })\r\n\r\n            .catch((error) => this.setState({ error }));\r\n    }\r\n    render() {\r\n\r\n        const capitalize = (s) => {\r\n            if (typeof s !== 'string') return ''\r\n            return s.charAt(0).toUpperCase() + s.slice(1)\r\n          }\r\n        // console.log(this.state.convosInList.length)\r\n        let showItemsPage = ''\r\n        //by default show there are no items\r\n        if (this.state.convosInList.length === 0) {\r\n            showItemsPage = <p>No items here</p>\r\n        }\r\n        // if there are items \r\n        else {\r\n\r\n            // display details for each one of the items\r\n            showItemsPage = this.state.convosInList.map((item, key) => {\r\n                if (item) {\r\n                    return (\r\n                    <div className='divTableBody'>    \r\n                    <div className='divTableRow' key = {key}> \r\n                        <div className='divTableCell'>\r\n                            <div>{item.question} </div>\r\n                        </div>\r\n                      \r\n                        <div className='divTableCell'>\r\n                            <div>{item.min_number_of_people} </div>\r\n                            <div>{item.is_favorited} </div>\r\n                            <div>{item.is_public} </div>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                    )\r\n                }\r\n            })\r\n        }\r\n\r\n        const eventName = capitalize(this.props.match.params.meta);\r\n        //for (let i = 0; i < )\r\n        let showErrorOutput = ''\r\n        if (this.state.formValidationError) {\r\n            showErrorOutput = <div className='alert alert-info'>\r\n                <i className='fas fa-info'></i>\r\n                <strong>Info</strong>\r\n                {this.state.formValidationError}\r\n            </div>\r\n        }\r\n        return (\r\n            <section className='create-convo clearfix'>\r\n\r\n                <h2>{eventName} Convos</h2>\r\n                <div className='divTable blueTable media'>\r\n                        <div className='divTableHeading'>\r\n                            <div className='divTableRow'>\r\n                                <div className='divTableHead'>\r\n                                    {eventName}\r\n                                </div>\r\n                                <div className='divTableHead'>\r\n                                    Minimum Number of People\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                       {showItemsPage}    \r\n                </div>\r\n\r\n                {showErrorOutput}\r\n                \r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport TokenService from './services/TokenServices'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass navbar extends Component {\r\n\r\n    logOutClick = () => {\r\n        console.log('Logging out')\r\n        TokenService.clearAuthToken()\r\n        TokenService.getUserId = (id) => {\r\n            console.log(id)\r\n        }\r\n\r\n        window.location = '/'\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <header className='clearfix'>\r\n                <Link><h4 to exact='/'>Convo-To-Go</h4></Link>\r\n                {TokenService.hasAuthToken() ?\r\n                    <nav className=\"nav\">\r\n                        <ul className='link'>\r\n                            {/* <li>\r\n                                <Link to=\"/landing\">\r\n                                    <i className=\"fas fa-question-circle\"></i>\r\n                                    <span className='navlink-text' alt='Support'>Support</span>\r\n                                </Link>\r\n                            </li> */}\r\n                            <li>\r\n                                <Link to=\"/create-convo\">\r\n                                    <i className=\"fas fa-plus-circle\"></i>\r\n                                    <span className='navlink-text'>Create a Convo</span>\r\n                                </Link>\r\n                            </li>\r\n                            {/* <li>\r\n\r\n                                <Link to=\"/defect-log\">\r\n                                    <i className=\"fas fa-edit\"></i>\r\n                                    <span className='navlink-text'>Log Defect</span>\r\n                                </Link>\r\n                            </li> */}\r\n                            <li>\r\n                                <Link to=\"/\" onClick={this.logOutClick}>\r\n                                    <i className=\"fas fa-sign-out-alt\"></i>\r\n                                    <span className='navlink-text'>Log Out</span>\r\n                                </Link>\r\n                            </li>\r\n                        </ul>\r\n                    </nav>\r\n                    : ''}\r\n            </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default navbar","import React from 'react'\r\nimport TokenService from './services/TokenServices'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass Error extends React.Component {\r\n\r\n    logOutClick = () => {\r\n        console.log('Logging out')\r\n        TokenService.clearAuthToken()\r\n        TokenService.getUserId = (id) => {\r\n            console.log(id)\r\n        }\r\n\r\n        window.location = '/'\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='error'>\r\n                {TokenService.hasAuthToken() ?\r\n                    <div>\r\n                        <h6>\r\n                            Whoa where are you going?\r\n                        </h6>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <h6>Please login!</h6>\r\n                        <li>\r\n                            <Link to=\"/\">Back To Login</Link>\r\n                        </li>\r\n                    </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Error","import React from 'react'\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\r\nimport HomePage from './HomePage'\r\nimport LandingPage from './LandingPage'\r\nimport Registration from './Registration'\r\nimport SignIn from './SignIn'\r\nimport CreateConvo from './CreateConvo'\r\nimport ConvoEventList from './ConvoEventList'\r\nimport Nav from './Nav'\r\nimport Error from './Error'\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <BrowserRouter>\r\n                {/* un-routed component */}\r\n                <Nav />\r\n                <Switch>\r\n                    {/* statis routes */}\r\n                    <Route exact path='/' component={LandingPage} />\r\n                    <Route exact path='/signin' component={SignIn} />\r\n                    <Route path='/registration' component={Registration} />\r\n                    <Route path='/homepage' component={HomePage} />\r\n                    <Route path=\"/convo-event-list/:meta\" component={ConvoEventList} />\r\n                    <Route path='/create-convo' component={CreateConvo} />\r\n                    \r\n                    {/* error route */}\r\n                    <Route component={Error} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)"],"sourceRoot":""}